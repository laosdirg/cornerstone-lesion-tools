{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap a2fcd92cda76f6b44f44","webpack:///./externalModules.js","webpack:///./lesionTools/threshold.js","webpack:///./lesionTools/constants.js","webpack:///./lesionTools/history.js","webpack:///./index.js","webpack:///./lesionTools/display.js","webpack:///./lesionTools/grow.js","webpack:///./lesionTools/draw.js","webpack:///./util/pointInsidePolygon.js","webpack:///./lesionTools/score.js"],"names":["cornerstone","window","cornerstoneTools","cst","addToolState","getToolState","configuration","historySize","layersAbove","layersBelow","historyPosition","toolRegionValue","calciumThresholdHu","drawAlpha","regionColorsRGB","KVPToMultiplier","growIterationsPerChunk","calciumThresholdHuParsed","parseInt","performThresholding","imageIds","width","height","view","buffer","Promise","all","map","imageId","imageIdIndex","loadImage","then","image","length","ArrayBuffer","intercept","slope","pixelData","getPixelData","sliceSize","i","value","hu","label","offset","ensureToolData","element","regionsData","regionsToolData","data","enabled","history","drawBuffer","threshold","stackToolData","console","log","stackData","regions","updateImage","getConfiguration","setConfiguration","config","TYPED_ARRAY","Uint8Array","TOOL_TYPE","createUndoStep","undo","redo","thresholdingData","state","current","slice","push","shift","replacement","pop","default","displayTool","onImageRendered","detail","canvasContext","enabledElement","canvas","document","createElement","context","getContext","imageData","createImageData","currentImageIdIndex","doubleBuffer","pixels","sliceOffset","imageDataOffset","color","putImageData","setToPixelCoordinateSystem","drawImage","lesionIndicator","simpleMouseButtonTool","isMouseButtonEnabled","getToolOptions","toolType","linearNeighbours","highSlice","lowSlice","index","neighbours","sliceIndex","Math","floor","regionGrowing","point","x","y","clickIndex","linearIndex","fromValue","resolve","activeVoxels","chunk","forEach","nextVoxels","reduce","acc","cur","concat","filter","self","indexOf","setTimeout","mouseDownCallback","e","currentPoints","which","options","mouseButtonMask","round","grow","setToolOptions","snap","fillStyle","strokeStyle","updateRegions","numSlices","points","startSlice","max","endSlice","min","dslice","prevValue","snapBool","imageRenderedCallback","draw","beginPath","moveTo","lineTo","closePath","stroke","fill","dragCallback","preventDefault","stopPropagation","mouseUpCallback","removeEventListener","addEventListener","pointInsidePolygon","vs","inside","j","xi","yi","xj","yj","intersect","computeVoxelSize","computeScore","computeIOPProjectedDistance","computeOverlapFactor","score","getDensityFactor","mode","array","modeMap","maxEl","maxCount","el","metaData","sliceThickness","pixelSpacing","Error","zLength","xLength","yLength","voxels","voxelSizeScaled","densityFactor","maxHU","volume","KVPMultiplier","KVP","cascore","modeOverlapFactor","imagePositions","imageOrientation","imagePosition1Vector","cornerstoneMath","Vector3","fromArray","imagePosition2Vector","imageOrientationRowVector","imageOrientationColumnVector","orientationNormal","crossVectors","projection1","projectOnVector","projection2","distanceTo","distance","overlap","bfs","visitedVoxels","lesionVoxels","stack","voxelsEachRegion","maxHUEachRegion","overlapFactor","prevImagePosition","overlapFactors","imageIndex","dataSet","floatString","string","split","parseFloat","rescaleSlope","rescaleIntercept","rescaleType","imagePositionPatient","imageOrientationTmp","Array","slicesInLabel","labelIdx","lesions","sliceIdx","lesionIdx","cascoreCurrent","sum","val"],"mappings":"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","file":"cornerstoneLesionTools.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"cornerstoneLesionTools\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cornerstoneLesionTools\"] = factory();\n\telse\n\t\troot[\"cornerstoneLesionTools\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a2fcd92cda76f6b44f44","let cornerstone = window.cornerstone;\nlet cornerstoneTools = window.cornerstoneTools;\n\nexport default {\n  set cornerstone (cst) {\n    cornerstone = cst;\n  },\n  get cornerstone () {\n    return cornerstone;\n  },\n  set cornerstoneTools (cst) {\n    cornerstoneTools = cst;\n  },\n  get cornerstoneTools () {\n    return cornerstoneTools;\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./externalModules.js","import external from '../externalModules.js';\nimport { TYPED_ARRAY, TOOL_TYPE } from './constants.js';\n\nconst { addToolState, getToolState } = external.cornerstoneTools;\n\nlet configuration = {\n  historySize: 4,\n  layersAbove: 1,\n  layersBelow: 1,\n  historyPosition: 0,\n  toolRegionValue: 2,\n  calciumThresholdHu: '-', // Placeholder until it gets set ('-' shows up nicely in text input)\n  drawAlpha: 1,\n  regionColorsRGB: [\n    [255, 0, 255],\n    [246, 193, 91],\n    [237, 148, 69],\n    [230, 103, 49],\n    [184, 74, 41],\n    [106, 58, 45]\n  ],\n  KVPToMultiplier: {\n    150: 1.06,\n    140: 1.04,\n    130: 1.02,\n    120: 1,\n    110: 0.98,\n    100: 0.96,\n    90: 0.93,\n    80: 0.89,\n    70: 0.85\n  },\n  growIterationsPerChunk: 2\n};\n\nconfiguration.calciumThresholdHuParsed = parseInt(configuration.calciumThresholdHu, 10);\n\n/**\n * Perform the thresholding on a stack\n */\nfunction performThresholding (imageIds) {\n  let width, height, view, buffer;\n\n  // Thresholding promises\n  return Promise.all(imageIds.map((imageId, imageIdIndex) =>\n    external.cornerstone.loadImage(imageId).then((image) => {\n      if (!buffer) {\n        // Initialize variables on first loaded image\n        width = image.width;\n        height = image.height;\n\n        const length = width * height * imageIds.length;\n\n        buffer = new ArrayBuffer(length);\n        view = new TYPED_ARRAY(buffer);\n      }\n\n      const { intercept, slope } = image;\n      const pixelData = image.getPixelData();\n      const sliceSize = width * height;\n\n      for (let i = 0; i < sliceSize; i++) {\n        const value = pixelData[i];\n        // Calculate hu-value\n        const hu = (value * slope) + intercept;\n        // Check against threshold\n        const label = (hu >= configuration.calciumThresholdHu) ? 1 : 0;\n        // Calculate offset within view into ArrayBufer\n        const offset = imageIdIndex * sliceSize + i;\n\n        // Finally, assign label\n        view[offset] = label;\n      }\n    })\n  // When all promises resolve, return the buffer and its dimensions\n  )).then(() => ({\n    buffer,\n    width,\n    height\n  }));\n}\n\nfunction ensureToolData (element) {\n  let regionsData;\n\n  const regionsToolData = getToolState(element, TOOL_TYPE);\n\n  if (!regionsToolData || !regionsToolData.data || !regionsToolData.data.length) {\n    regionsData = {\n      enabled: 1,\n      buffer: null,\n      width: null,\n      height: null,\n      history: [],\n      drawBuffer: null\n    };\n    addToolState(element, TOOL_TYPE, regionsData);\n  } else {\n    regionsData = regionsToolData.data[0];\n  }\n\n  return regionsData;\n}\n\nfunction threshold (element) {\n  const stackToolData = getToolState(element, 'stack');\n  console.log(\"got stack\", stackToolData);\n  if (!stackToolData || !stackToolData.data || !stackToolData.data.length) {\n    return;\n  }\n\n  const stackData = stackToolData.data[0];\n  const regionsData = ensureToolData(element);\n\n  console.log(\"ABOUT TO PERFORM\");\n\n  performThresholding(stackData.imageIds).then((regions) => {\n    // Add threshold data to tool state\n    regionsData.buffer = regions.buffer;\n    regionsData.width = regions.width;\n    regionsData.height = regions.height;\n\n    // Update the element to apply the viewport and tool changes\n    external.cornerstone.updateImage(element);\n  });\n}\n\nfunction getConfiguration () {\n  return configuration;\n}\n\nfunction setConfiguration (config) {\n  configuration = config;\n}\n\n// Module/private exports\nexport default {\n  threshold,\n  getConfiguration,\n  setConfiguration\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lesionTools/threshold.js","export const TYPED_ARRAY = Uint8Array;\nexport const TOOL_TYPE = 'regions';\n\n\n\n// WEBPACK FOOTER //\n// ./lesionTools/constants.js","import external from '../externalModules.js';\n\nconst { getToolState } = external.cornerstoneTools;\n\nconst configuration = {};\n\n/**\n * Store current state to history\n */\nexport function createUndoStep (element) {\n  const thresholdingData = getToolState(element, 'regions');\n\n  const state = thresholdingData.data[0];\n  // Make a copy using .slice()\n  const current = state.buffer.slice();\n\n  // Put at end of history\n  state.history.push(current);\n  // Remove oldest if too much history\n  if (state.history.length > configuration.historySize) {\n    state.history.shift();\n  }\n}\n\nexport function undo (element) {\n  const thresholdingData = getToolState(element, 'regions');\n  const state = thresholdingData.data[0];\n\n  if (state.history.length < 1) {\n    return;\n  }\n\n  const replacement = state.history.pop();\n\n  state.buffer = replacement;\n  external.cornerstone.updateImage(element);\n}\n\nexport function redo () {\n  // Not implemented\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lesionTools/history.js","export { default as external } from './externalModules.js';\nexport { default as display } from './lesionTools/display.js';\nexport { default as threshold } from './lesionTools/threshold.js';\nexport { default as grow } from './lesionTools/grow.js';\nexport { default as draw } from './lesionTools/draw.js';\nexport { default as score } from './lesionTools/score.js';\nexport { undo, redo } from './lesionTools/history.js';\n\n\n\n// WEBPACK FOOTER //\n// ./index.js","import external from '../externalModules.js';\nimport { TYPED_ARRAY } from './constants.js';\n\nconst { displayTool, getToolState } = external.cornerstoneTools;\n\nconst configuration = {\n  drawAlpha: 1,\n  regionColorsRGB: [\n    [255, 0, 255],\n    [246, 193, 91],\n    [237, 148, 69],\n    [230, 103, 49],\n    [184, 74, 41],\n    [106, 58, 45]\n  ]\n};\n\n/**\n * Draw regions on image\n */\nfunction onImageRendered ({ detail }) {\n  const { canvasContext, element, enabledElement, image } = detail;\n  const { width, height } = image;\n\n  const stackToolData = getToolState(element, 'stack');\n  const regionsToolData = getToolState(element, 'regions');\n\n  // Ensure tool is enabled\n  if (!regionsToolData || !regionsToolData.data || !regionsToolData.data.length) {\n    return;\n  }\n\n  if (!regionsToolData.data[0].drawBuffer || width !== regionsToolData.data[0].drawBuffer.canvas.width) {\n    const canvas = document.createElement('canvas');\n    const context = canvas.getContext('2d');\n    const imageData = context.createImageData(width, height);\n\n    canvas.width = width;\n    canvas.height = height;\n\n    regionsToolData.data[0].drawBuffer = {\n      canvas,\n      imageData\n    };\n  }\n\n  // Extract tool data\n  const { currentImageIdIndex } = stackToolData.data[0];\n  const { drawBuffer, buffer } = regionsToolData.data[0];\n\n  const doubleBuffer = drawBuffer.canvas;\n  const imageData = drawBuffer.imageData;\n\n  const pixels = imageData.data;\n  const sliceSize = width * height;\n  const sliceOffset = currentImageIdIndex * sliceSize;\n  const view = new TYPED_ARRAY(buffer, sliceOffset, sliceSize);\n\n  for (let offset = 0; offset < view.length; offset += 1) {\n    // Each pixel is represented by four elements in the imageData array\n    const imageDataOffset = offset * 4;\n    const label = view[offset];\n\n    if (label) {\n      const color = configuration.regionColorsRGB[label - 1];\n\n      pixels[imageDataOffset + 0] = color[0];\n      pixels[imageDataOffset + 1] = color[1];\n      pixels[imageDataOffset + 2] = color[2];\n      pixels[imageDataOffset + 3] = configuration.drawAlpha * 255;\n    } else {\n      pixels[imageDataOffset + 3] = 0;\n    }\n  }\n\n  // Put image data back into offscreen canvas\n  doubleBuffer.getContext('2d').putImageData(imageData, 0, 0);\n  // Set transforms based on zoom/pan/etc\n  external.cornerstone.setToPixelCoordinateSystem(enabledElement, canvasContext);\n  // Finally, draw offscreen canvas onto context\n  canvasContext.drawImage(doubleBuffer, 0, 0);\n}\n\nconst lesionIndicator = displayTool(onImageRendered);\n\nlesionIndicator.setConfiguration(configuration);\n\nexport default lesionIndicator;\n\n\n\n// WEBPACK FOOTER //\n// ./lesionTools/display.js","import external from '../externalModules.js';\nimport { createUndoStep } from './history.js';\nimport threshold from './threshold.js';\n\nconst {\n  getToolState,\n  simpleMouseButtonTool,\n  isMouseButtonEnabled,\n  getToolOptions\n} = external.cornerstoneTools;\n\nconst toolType = 'regionsGrow';\n\n// Get neighbour linear indices within slice bounds\nfunction linearNeighbours (width, height, highSlice, lowSlice, index) {\n  const sliceSize = width * height;\n  const neighbours = [\n    index - 1,\n    index + 1,\n    index - width,\n    index + width\n  ];\n\n  // Stay within bounds\n  const sliceIndex = Math.floor(index / sliceSize);\n\n  if (sliceIndex < highSlice) {\n    neighbours.push(index + sliceSize);\n  }\n  if (sliceIndex > lowSlice) {\n    neighbours.push(index - sliceSize);\n  }\n\n  return neighbours;\n}\n\nfunction regionGrowing (regions, point) {\n  const { growIterationsPerChunk, toolRegionValue, layersAbove, layersBelow } = threshold.getConfiguration();\n  const { width, height, buffer } = regions;\n  const [x, y, slice] = point;\n  const highSlice = slice + layersBelow;\n  const lowSlice = slice - layersAbove;\n\n  const view = new Uint8Array(buffer);\n\n  // Calculate linear indices and offsets\n  const sliceSize = width * height;\n  const sliceOffset = sliceSize * slice;\n  const clickIndex = (y * width) + x;\n  const linearIndex = sliceOffset + clickIndex;\n  const fromValue = view[linearIndex];\n\n  // Only continue if we clicked in thresholded area in different color\n  if (fromValue === 0 || fromValue === toolRegionValue) {\n    return Promise.resolve();\n  }\n\n  // Growing starts at clicked voxel\n  let activeVoxels = [linearIndex];\n\n  return new Promise((resolve) => {\n    function chunk () {\n      for(let i = 0; i < growIterationsPerChunk; i++) {\n        // While activeVoxels is not empty\n        if (activeVoxels.length === 0) {\n          return resolve();\n        }\n\n        // Set the active voxels to nextValue\n        activeVoxels.forEach((i) => {\n          view[i] = toolRegionValue;\n        });\n\n        // The new active voxels are neighbours of curent active voxels\n        const nextVoxels = activeVoxels.map(\n          (i) => linearNeighbours(width, height, highSlice, lowSlice, i)\n        ).reduce( // Flatten the array of arrays to array of indices\n          (acc, cur) => acc.concat(cur), []\n        ).filter( // Remove duplicates\n          (value, index, self) => self.indexOf(value) === index\n        ).filter( // Remove voxels that does not have the correct fromValue\n          (i) => view[i] === fromValue\n        );\n\n        activeVoxels = nextVoxels;\n      }\n      setTimeout(chunk, 0);\n    }\n\n    chunk();\n  });\n}\n\nfunction mouseDownCallback (e) {\n  const { currentPoints, element, which } = e.detail;\n  const options = getToolOptions(toolType, element);\n\n  if (isMouseButtonEnabled(which, options.mouseButtonMask)) {\n    const [stackData] = getToolState(element, 'stack').data;\n    const [regionsData] = getToolState(element, 'regions').data;\n    const { currentImageIdIndex } = stackData;\n    const { x, y } = currentPoints.image;\n    const point = [Math.round(x), Math.round(y), currentImageIdIndex];\n\n    createUndoStep(element);\n    regionGrowing(regionsData, point).then(() => {\n      external.cornerstone.updateImage(element);\n    });\n  }\n}\n\nconst grow = simpleMouseButtonTool(mouseDownCallback, toolType);\n\nexport default grow;\n\n\n\n// WEBPACK FOOTER //\n// ./lesionTools/grow.js","import external from '../externalModules.js';\nimport { createUndoStep } from './history.js';\nimport pointInsidePolygon from '../util/pointInsidePolygon.js';\nimport threshold from './threshold.js';\n\nconst { getToolState, getToolOptions, setToolOptions, simpleMouseButtonTool, isMouseButtonEnabled } = external.cornerstoneTools;\n\nconst toolType = 'draw';\n\nlet configuration = {\n  snap: false, // Snap to thresholded region or not\n  fillStyle: 'rgba(255,255,255,.2)',\n  strokeStyle: 'white'\n};\n\nfunction updateRegions (element) {\n  const { toolRegionValue, layersAbove, layersBelow } = threshold.getConfiguration();\n\n  createUndoStep(element);\n\n  // Get tool data\n  const stackData = getToolState(element, 'stack');\n  const thresholdingData = getToolState(element, 'regions');\n  const options = getToolOptions(toolType, element);\n\n  // Extract tool data\n  const slice = stackData.data[0].currentImageIdIndex;\n  const numSlices = stackData.data[0].imageIds.length;\n  const regions = thresholdingData.data[0];\n  const points = options.points.map(({ x, y }) => ([x, y]));\n\n  // Extract region data\n  const buffer = regions.buffer;\n  const width = regions.width;\n  const height = regions.height;\n\n  // Find operation bounds\n  const startSlice = Math.max(0, slice - layersAbove);\n  const endSlice = Math.min(numSlices, slice + layersBelow);\n\n  // Setup view into buffer\n  const sliceSize = width * height;\n  const sliceOffset = startSlice * sliceSize;\n  const view = new Uint8Array(buffer, sliceOffset);\n\n  // Mark points inside\n  console.log(numSlices);\n  for (let dslice = 0; dslice <= endSlice - startSlice; dslice += 1) {\n    for (let x = 0; x < width; x += 1) {\n      for (let y = 0; y < height; y += 1) {\n        const index = x + (y * width) + (dslice * sliceSize);\n        const prevValue = view[index];\n\n        let snapBool;\n\n        if (configuration.snap) {\n          snapBool = prevValue > 0;\n        } else {\n          snapBool = true;\n        }\n        if (snapBool && pointInsidePolygon([x, y], points)) {\n          view[index] = toolRegionValue;\n        }\n      }\n    }\n  }\n}\n\n// Draw regions on the canvas\nfunction imageRenderedCallback (e) {\n  const { canvasContext, enabledElement, element } = e.detail;\n  const { fillStyle, strokeStyle } = draw.getConfiguration();\n\n  // Points\n  const options = getToolOptions(toolType, element);\n  const points = options.points;\n\n  if (points.length < 2) {\n    return;\n  }\n\n  // Set the canvas context to the image coordinate system\n  external.cornerstone.setToPixelCoordinateSystem(enabledElement, canvasContext);\n\n  canvasContext.fillStyle = fillStyle;\n  canvasContext.strokeStyle = strokeStyle;\n  canvasContext.beginPath();\n  canvasContext.moveTo(points[0].x, points[0].y);\n  points.slice(1).forEach(function (point) {\n    canvasContext.lineTo(point.x, point.y);\n  });\n  canvasContext.closePath();\n  canvasContext.stroke();\n  canvasContext.fill();\n}\n\nfunction dragCallback (e) {\n  const { currentPoints, element } = e.detail;\n  const options = getToolOptions(toolType, element);\n\n  options.points.push(currentPoints.image);\n  external.cornerstone.updateImage(element);\n\n  e.preventDefault();\n  e.stopPropagation();\n}\n\n// Disable drawing and tracking on mouse up also update regions\nfunction mouseUpCallback (e) {\n  const { element } = e.detail;\n\n  element.removeEventListener('cornerstonetoolsmousedrag', dragCallback);\n  element.removeEventListener('cornerstonetoolsmouseup', mouseUpCallback);\n  element.removeEventListener('cornerstonetoolsmouseclick', mouseUpCallback);\n  element.removeEventListener('cornerstoneimagerendered', imageRenderedCallback);\n\n  updateRegions(element);\n  external.cornerstone.updateImage(element);\n}\n\n// Start drawing and tracking on mouse up, also reset points array\nfunction mouseDownCallback (e) {\n  const { element, which } = e.detail;\n  const options = getToolOptions(toolType, element);\n\n  if (isMouseButtonEnabled(which, options.mouseButtonMask)) {\n    options.points = [];\n\n    setToolOptions(toolType, element, options);\n\n    element.addEventListener('cornerstonetoolsmousedrag', dragCallback);\n    element.addEventListener('cornerstonetoolsmouseup', mouseUpCallback);\n    element.addEventListener('cornerstonetoolsmouseclick', mouseUpCallback);\n    element.addEventListener('cornerstoneimagerendered', imageRenderedCallback);\n\n    e.preventDefault();\n    e.stopPropagation();\n  }\n}\n\nconst draw = simpleMouseButtonTool(mouseDownCallback, toolType);\n\ndraw.getConfiguration = () => configuration;\ndraw.setConfiguration = (config) => {\n  configuration = config;\n};\n\nexport default draw;\n\n\n\n// WEBPACK FOOTER //\n// ./lesionTools/draw.js","// Determine if a point is inside a polygon\nexport default function pointInsidePolygon (point, vs) {\n  const [x, y] = point;\n  let inside = false;\n\n  for (let i = 0, j = vs.length - 1; i < vs.length; j = i++) {\n    const [xi, yi] = vs[i];\n    const [xj, yj] = vs[j];\n\n    const intersect = ((yi > y) !== (yj > y)) &&\n      (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n\n    if (intersect) {\n      inside = !inside;\n    }\n  }\n\n  return inside;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./util/pointInsidePolygon.js","import external from '../externalModules.js';\nimport { getConfiguration, getLastElement } from './threshold.js';\nimport { TYPED_ARRAY, TOOL_TYPE } from './constants.js';\n\nconst { getToolState } = external.cornerstoneTools;\n\nfunction getDensityFactor (hu) {\n  if (hu < 130) {\n    return 0;\n  } else if (hu < 200) {\n    return 1;\n  } else if (hu < 300) {\n    return 2;\n  } else if (hu < 400) {\n    return 3;\n  }\n\n  return 4;\n}\n\n// Finds the value with the most occurrences in array\n// Should be O(n)\nfunction mode (array) {\n  if (array.length === 0) {\n    return null;\n  }\n  const modeMap = {};\n  let maxEl = array[0];\n  let maxCount = 1;\n\n  for (let i = 0; i < array.length; i++) {\n    const el = array[i];\n\n    if (modeMap[el] === null) {\n      modeMap[el] = 1;\n    } else {\n      modeMap[el]++;\n    }\n\n    if(modeMap[el] > maxCount) {\n      maxEl = el;\n      maxCount = modeMap[el];\n    }\n  }\n\n  return maxEl;\n}\n\nexport function computeVoxelSize (metaData) {\n  if (metaData.sliceThickness === 0 ||\n      metaData.pixelSpacing[0] === 0 ||\n      metaData.pixelSpacing[1] === 0) {\n    throw new Error('sliceThickness or pixelSpacing was 0');\n  }\n  const zLength = metaData.sliceThickness;\n  const xLength = metaData.pixelSpacing[0];\n  const yLength = metaData.pixelSpacing[1];\n\n\n  return zLength * xLength * yLength; // In mm³\n}\n\nexport function computeScore (metaData, voxels) {\n  // Division by 3 because Agatson score assumes a slice thickness of 3 mm\n  const voxelSizeScaled = computeVoxelSize(metaData) / 3;\n  const densityFactor = getDensityFactor(metaData.maxHU);\n  const volume = voxels.length * voxelSizeScaled;\n\n  const { KVPToMultiplier } = getConfiguration();\n  const KVPMultiplier = KVPToMultiplier[metaData.KVP];\n  const cascore = volume * densityFactor * KVPMultiplier;\n\n  console.log(`modeOverlapFactor: ${metaData.modeOverlapFactor}`);\n  console.log(`voxels.length: ${voxels.length}`);\n  console.log(`voxelSizeScaled: ${voxelSizeScaled}`);\n  console.log(`Volume: ${volume}`);\n  console.log(`Max HU: ${metaData.maxHU}`);\n  console.log(`densityFactor: ${densityFactor}`);\n  console.log(`KVPMultiplier: ${KVPMultiplier}`);\n  console.log(`CAscore: ${cascore}`);\n\n  // If modeOverlapFactor factor is undefined it is because there is only one slice in the series.\n  // In this case obviously modeOverlapFactor is meaningless and should not be multiplied with cascore.\n  if (metaData.modeOverlapFactor) {\n    return cascore * metaData.modeOverlapFactor;\n  }\n\n  return cascore;\n\n}\n\n/*\n* Computes the distance between two slices based on the DICOM Image Plane Module\n* @param imagePositions {Array[2][3]} - DICOM tag (0020, 0032) of two slices\n* @param imageOrientation {Array[2][3]} - DICOM tag (0020, 0037) of first slice\n*/\nexport function computeIOPProjectedDistance (imagePositions, imageOrientation) {\n  const imagePosition1Vector = new external.cornerstoneMath.Vector3();\n\n  imagePosition1Vector.fromArray(imagePositions[0]);\n\n  const imagePosition2Vector = new external.cornerstoneMath.Vector3();\n\n  imagePosition2Vector.fromArray(imagePositions[1]);\n\n  const imageOrientationRowVector = new external.cornerstoneMath.Vector3();\n\n  imageOrientationRowVector.fromArray(imageOrientation[0]);\n\n  const imageOrientationColumnVector = new external.cornerstoneMath.Vector3();\n\n  imageOrientationColumnVector.fromArray(imageOrientation[1]);\n\n  // Compute unit normal of Image Orientation crossVectors\n  const orientationNormal = new external.cornerstoneMath.Vector3();\n\n  orientationNormal.crossVectors(imageOrientationRowVector, imageOrientationColumnVector);\n  // Project both position vectors on normal\n  const projection1 = imagePosition1Vector.projectOnVector(orientationNormal);\n  const projection2 = imagePosition2Vector.projectOnVector(orientationNormal);\n\n  // Compute distance of projected vectors\n  return projection1.distanceTo(projection2);\n}\n\nexport function computeOverlapFactor (distance, sliceThickness) {\n  if (distance <= 0) {\n    throw new Error('Distance must be > 0');\n  }\n\n  if (distance >= sliceThickness) {\n    return 1;\n  }\n\n  const overlap = sliceThickness - distance;\n\n  return (sliceThickness - overlap) / (sliceThickness);\n}\n\nfunction bfs (x, y, view, visitedVoxels, label, image) {\n  const { intercept, slope, width } = image;\n  const pixelData = image.getPixelData();\n  const lesionVoxels = [];\n  const stack = [[x, y]];\n\n  while (stack.length > 0) {\n    const [x, y] = stack.shift();\n\n    // If visited is 0, the element has not been visisted before\n    if (visitedVoxels[x][y] === 0 && view[y * width + x] === label) {\n      stack.push([x - 1, y]);\n      stack.push([x + 1, y]);\n      stack.push([x, y - 1]);\n      stack.push([x, y + 1]);\n\n      const value = pixelData[x + y * width];\n      const hu = (value * slope) + intercept;\n\n      if (hu >= 130) {\n        lesionVoxels.push(hu);\n      }\n      visitedVoxels[x][y] = 1;\n    }\n\n  }\n\n  return lesionVoxels;\n}\n\n/**\n * Calculate CaScore per label per slice per lesion\n *\n */\nexport function score () {\n  const element = getLastElement();\n  const { regionColorsRGB } = getConfiguration();\n\n  const regionsToolData = getToolState(element, TOOL_TYPE);\n  const stackToolData = getToolState(element, 'stack');\n  const { buffer } = regionsToolData.data[0];\n  const { imageIds } = stackToolData.data[0];\n\n  // Extract and group region-voxels\n  const voxelsEachRegion = regionColorsRGB.slice(1).map(() => imageIds.map(() => []));\n  const maxHUEachRegion = regionColorsRGB.slice(1).map(() => imageIds.map(() => []));\n\n  let overlapFactor;\n  let prevImagePosition;\n  const overlapFactors = [];\n\n  const metaData = {};\n\n  return Promise.all(imageIds.map((imageId, imageIndex) =>\n    external.cornerstone.loadImage(imageId).then((image) => {\n      const dataSet = image.data;\n\n      metaData.sliceThickness = dataSet.floatString('x00180050');\n      metaData.pixelSpacing = dataSet.string('x00280030').split('\\\\').map(parseFloat);\n      metaData.KVP = dataSet.floatString('x00180060');\n      metaData.rescaleSlope = dataSet.floatString('x00281053');\n      metaData.rescaleIntercept = dataSet.floatString('x00281052');\n      metaData.rescaleType = dataSet.string('x00281054');\n\n      const imagePositionPatient = dataSet.string('x00200032').split('\\\\').map(parseFloat);\n      const imageOrientationTmp = dataSet.string('x00200037').split('\\\\').map(parseFloat);\n      const imageOrientation = [\n        imageOrientationTmp.slice(0, 3),\n        imageOrientationTmp.slice(3)\n      ];\n\n      /* What is this?\n       if (metaData.rescaleType !== 'HU') {\n         console.warn(`Modality LUT does not convert to Hounsfield units but to ${metaData.rescaleType}. Agatston score is not defined for this unit type.`);\n\n         return;\n      }\n       */\n\n      if (prevImagePosition) {\n        const distance = computeIOPProjectedDistance([prevImagePosition, imagePositionPatient], imageOrientation);\n\n        overlapFactor = computeOverlapFactor(distance, metaData.sliceThickness);\n\n        // Find overlapfactor with the highest occurance\n        overlapFactors.push(overlapFactor);\n        metaData.modeOverlapFactor = mode(overlapFactors);\n\n        // Save imagePositionPatient for next overlapFactor computation\n        prevImagePosition = imagePositionPatient;\n      } else {\n        prevImagePosition = imagePositionPatient;\n      }\n\n      // Overlap has been calculated, now we investigate voxels\n\n      const { height, width } = image;\n      const sliceSize = width * height;\n      const offset = imageIndex * sliceSize;\n\n      const view = new TYPED_ARRAY(buffer, offset, sliceSize);\n\n      // Initialze with 0's\n      const visitedVoxels = Array(width).fill().map(() => Array(height).fill(0));\n\n      for (let x = 0; x < width; x += 1) {\n        for (let y = 0; y < height; y += 1) {\n          // Extract label from view into ArrayBuffer\n          const label = view[y * width + x];\n\n          if (label > 1) {\n            const lesionVoxels = bfs(x, y, view, visitedVoxels, label, image);\n\n            if (lesionVoxels.length) {\n              const maxHU = Math.max(...lesionVoxels);\n\n              voxelsEachRegion[label - 2][imageIndex].push(lesionVoxels);\n              maxHUEachRegion[label - 2][imageIndex].push(maxHU);\n            }\n          }\n        }\n      }\n    })\n  // When all images have been processed\n  )).then(() => voxelsEachRegion.map((slicesInLabel, labelIdx) => {\n    const cascore = [];\n\n    slicesInLabel.forEach((lesions, sliceIdx) => {\n      lesions.forEach((voxels, lesionIdx) => {\n        metaData.maxHU = maxHUEachRegion[labelIdx][sliceIdx][lesionIdx];\n\n        const cascoreCurrent = voxels.length > 0 ? computeScore(metaData, voxels) : 0;\n\n        cascore.push(cascoreCurrent);\n      });\n    });\n    const sum = cascore.reduce((acc, val) => acc + val, 0);\n\n    return sum;\n  }));\n}\n\nexport default score;\n\n\n\n// WEBPACK FOOTER //\n// ./lesionTools/score.js"],"sourceRoot":""}